{"version":3,"sources":["../src/libs/zendesk.ts"],"names":[],"mappings":"AAEA,aAAK,eAAe,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,KAAK,GAAG,CAAA;AAE3D,MAAM,CAAC,OAAO,UAAU,aAAa,CACnC,YAAY,qBAAiC,EAC7C,QAAQ,qBAAiC,EACzC,UAAU,qBAA0B;;0BActB,eAAe,iEAGX,MAAM;EAoBzB","file":"zendesk.d.ts","sourcesContent":["import axios from 'axios'\n\ntype ArticleCallback = (article: any, index: number) => any\n\nexport default function ZendeskClient(\n  emailAddress = process.env.ZENDESK_AUTH_EMAIL,\n  apiToken = process.env.ZENDESK_AUTH_TOKEN,\n  zendeskUrl = process.env.ZENDESK_URL\n) {\n  return {\n    client: axios.create({\n      baseURL: zendeskUrl,\n      headers: {\n        Authorization: `Basic ${Buffer.from(\n          `${emailAddress}/token:${apiToken}`\n        ).toString('base64')}`,\n        'Content-Type': 'application/json',\n      },\n    }),\n\n    async getArticles(\n      callback: ArticleCallback,\n      locale = 'en-US',\n      endpoint?: string,\n      currentIndex: number = 1\n    ) {\n      endpoint =\n        endpoint || `/api/v2/help_center/${locale.toLowerCase()}/articles.json`\n      const { data } = await this.client.get(endpoint)\n      await Promise.all(\n        data.articles.map(async (article: any, ind: number) => {\n          await callback(article, currentIndex * (ind + 1))\n        })\n      )\n\n      if (data.next_page)\n        await this.getArticles(\n          callback,\n          locale,\n          data.next_page,\n          currentIndex + 1\n        )\n    },\n  }\n}\n"]}